Download matter.js from github and place in root

-------------------------------- EXAMPLE 1 --------------------------------
-------------------------------- 2 Blocks  --------------------------------

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Example 1</title>
  </head>
  <body>
    <script src="matter.js"></script>
    <script>
      let engine = Matter.Engine.create(); // make engine instance
      let render = Matter.Render.create({
        // make render instance
        element: document.body,
        engine: engine,
      });

      let ground = Matter.Bodies.rectangle(400, 600, 810, 60, {
        // instantiate rectangle for ground
        isStatic: true,
      });
      let boxA = Matter.Bodies.rectangle(400, 200, 80, 80); // instantiate 2 squares (pos, size)
      let boxB = Matter.Bodies.rectangle(450, 50, 80, 80);

      let mouse = Matter.Mouse.create(render.canvas); // create a mouse instance
      let mouseConstraint = Matter.MouseConstraint.create(engine, {
        // set a mouse constraint
        mouse: mouse,
        constraint: {
          render: { visible: false },
        },
      });
      render.mouse = mouse; // set the mouse to the instance we made

      Matter.World.add(engine.world, [boxA, boxB, ground, mouseConstraint]); // add engine.world and objects to World (including mouseContraint)
      Matter.Runner.run(engine); // run the engine and render
      Matter.Render.run(render);
    </script>
  </body>
</html>

-------------------------------- EXAMPLE 2 --------------------------------
-------------------------------- Composite --------------------------------

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
  </head>
  <body>
    <script src="matter.js"></script>
    <script>
      let engine = Matter.Engine.create(); // make engine instance
      let render = Matter.Render.create({
        // make render instance
        element: document.body,
        engine: engine,
      });

      let ground = Matter.Bodies.rectangle(400, 600, 810, 60, {
        // instantiate rectangle for ground
        isStatic: true,
      });

      let mouse = Matter.Mouse.create(render.canvas); // create a mouse instance
      let mouseConstraint = Matter.MouseConstraint.create(engine, {
        // set a mouse constraint
        mouse: mouse,
        constraint: {
          render: { visible: false },
        },
      });
      render.mouse = mouse; // set the mouse to the instance we made

      let stack = Matter.Composites.stack(
        200,
        200,
        4,
        4,
        0,
        0,
        function (x, y) {
          return Matter.Bodies.rectangle(x, y, 80, 80);
        }
      ); // make many shapes in a composite (pos,col/row/gap/callback for defining blocks)

      Matter.World.add(engine.world, [stack, ground, mouseConstraint]); // add engine.world and objects to World (including mouseContraint)
      Matter.Runner.run(engine); // run the engine and render
      Matter.Render.run(render);
    </script>
  </body>
</html>

-------------------------------- EXAMPLE 3 --------------------------------
-------------------------------- Comp Poly --------------------------------

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
  </head>
  <body>
    <script src="matter.js"></script>
    <script>
      let engine = Matter.Engine.create(); // make engine instance
      let render = Matter.Render.create({
        // make render instance
        element: document.body,
        engine: engine,
        options: {
          // set screen size and disable wireframe default
          width: 1600,
          height: 800,
          wireframes: false,
        },
      });

      let ground = Matter.Bodies.rectangle(400, 600, 810, 60, {
        // instantiate rectangle for ground
        isStatic: true,
      });

      let mouse = Matter.Mouse.create(render.canvas); // create a mouse instance
      let mouseConstraint = Matter.MouseConstraint.create(engine, {
        // set a mouse constraint
        mouse: mouse,
        constraint: {
          render: { visible: false },
        },
      });
      render.mouse = mouse; // set the mouse to the instance we made

      let stack = Matter.Composites.stack(
        200,
        200,
        4,
        4,
        0,
        0,
        function (x, y) {
          let sides = Math.round(Matter.Common.random(2, 8));
          return Matter.Bodies.polygon(
            x,
            y,
            sides,
            Matter.Common.random(20, 50)
          );
        }
      ); // make many random polygons in a composite (pos,col/row/gap/callback for defining blocks)

      Matter.World.add(engine.world, [stack, ground, mouseConstraint]); // add engine.world and objects to World (including mouseContraint)
      Matter.Runner.run(engine); // run the engine and render
      Matter.Render.run(render);
    </script>
  </body>
</html>

-------------------------------- EXAMPLE 4 --------------------------------
-------------------------------- SlingShot --------------------------------

